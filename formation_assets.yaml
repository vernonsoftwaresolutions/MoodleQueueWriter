AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Moodel Tenant Api Assets

Parameters:

  MoodleAPIDNSName:
    Type: String
    Description: Name of Moodle API route 53 entry to use for target
    Default: api.vssdevelopment.com
  HostedZoneName:
    Type: String
    Description: Name of existing route 53 hosted zone name
    Default: vssdevelopment.com

Resources:

  LambdaCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName:
        Ref: MoodleAPIDNSName

  MoodleLambdaDomainName:
    Type: AWS::ApiGateway::DomainName
    Properties:
      CertificateArn: !Ref LambdaCertificate
      DomainName: !Ref MoodleAPIDNSName

  MoodleLambdaDNS:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName:
        Ref: HostedZoneName
      Comment: Zone apex alias targeted to ApiGateway
      RecordSets:
      - Name:
          !Join ["", [Ref: MoodleAPIDNSName, "."]]
        Type: A
        AliasTarget:
          HostedZoneId: Z2FDTNDATAQYW2 # This is hardcoded for all CloudFormation templates
          DNSName: !GetAtt MoodleLambdaDomainName.DistributionDomainName

  #API Gateway definition
  MoodleTenantApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Latest
      DefinitionBody:
        swagger: 2.0
        info:
          title: !Ref AWS::StackName
        paths:
          "/moodle/tenants":
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MoodleTenantPostHandler.Arn}:${!stageVariables.env}/invocations
              responses: {}
#todo- this needs to be cleaned up to "least priviledge"
  ClusterInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "root"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action: "*"
                Resource: "*"
  # Application assets
  MoodleTenantPostHandler:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.moodle.tenant.PostMoodleTenantHandler
      FunctionName: MoodleTenantPostHandler
      MemorySize: 512
      Runtime: java8
      CodeUri: build/distributions/MoodleTenantlambda.zip
      Environment:
        Variables:
          DUMMY: Value
      Role: !GetAtt ClusterInstanceRole.Arn
      Events:
        PostResource:
          Type: Api
          Properties:
            RestApiId: !Ref MoodleTenantApiGateway
            Path: /moodle/tenants
            Method: post

  MoodleTenantDetailVersion:
    Type: AWS::Lambda::Version
    Properties:
      FunctionName:
        Ref: MoodleTenantPostHandler
      Description: Most recent published version

Outputs:
  LambdaCertificate:
    Value: !Ref LambdaCertificate

  DemoApiGatewayRef:
    Value: !Ref MoodleTenantApiGateway

  MoodleTenantPostHandlerArn:
    Value: !GetAtt MoodleTenantPostHandler.Arn
    Export:
      Name: MoodleTenantPostHandlerArn

  MoodleTenantDetailVersion:
    Value: !GetAtt MoodleTenantDetailVersion.Version
    Export:
      Name: MoodleTenantDetailVersion